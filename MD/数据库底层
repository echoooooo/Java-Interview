二叉树,平衡二叉树,B-树，B+树
二叉树一个节点最多有两个子节点叶子，
1.每个节点都包含了一个元素以及N个字数，0<=n<=2
2,left  subtree 和right subtree 有顺序，次序不能颠倒，左子树的值要小于父节点，右子树的值大于父节点。
我们通常用的例如：哈夫曼算法来进行树的构建。

平衡二叉树，每个节点都有两个叶子，
每一层都有2的（n-1）次方个数。
例如100W条数据，就有20层，我们查询一个数据，只需要最多查询20次就可以了。
但是能不能把楼层降低呢，这样子我们查询的次数不就少了吗？

这里就有了矮矮胖胖的B-TREE

操作系统从磁盘块中取出数据是按照block为基本单位取出来的，而不是需要什么就取什么。
即使需要的是一个字节，磁盘也会从这个位置开始，顺序向后读取一定长度的数据放入内存，
这样做的理论依据是根据计算机科学中著名的局部性原理，当一个数据被用到的时候，其附近的
数据也通常会被马上被使用。

预读的长度一般为页（page）的整倍数，页是计算机管理存储器的逻辑块。
硬件以及操作系统往往将主存和磁盘存储区分割为连续的大小相等的块，每个存储块成为一页，（一般为4K）


